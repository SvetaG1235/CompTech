<div class="products-page">
  <h1>{{title}}</h1>
  
  <div class="categories">
    {{#each menuData}}
      <section class="category">
        <h2 class="category__title">{{this.[0]}}</h2>
        
        <div class="products-grid">
          {{#each this.[1]}}
            <div class="product-card">
              <div class="product-card__content">
                <h3 class="product-card__title">{{this.name}}</h3>
                
                <div class="product-card__info">
                  <p class="product-card__desc">{{this.description}}</p>
                  
                  <div class="product-card__meta">
                    <span class="product-card__price">{{this.price}} ₽</span>
                    <span class="product-card__stock {{#unless this.stock}}out-of-stock{{/unless}}">
                      {{#if this.stock}}{{this.stock}} шт.{{else}}Нет в наличии{{/if}}
                    </span>
                  </div>
                </div>
                
                <button class="btn btn--cart add-to-cart" 
                        data-id="{{this.id}}"
                        data-name="{{this.name}}"
                        data-price="{{this.price}}"
                        {{#unless this.stock}}disabled{{/unless}}>
                  {{#if this.stock}}Добавить в корзину{{else}}Недоступно{{/if}}
                </button>
              </div>
            </div>
          {{/each}}
        </div>
      </section>
    {{/each}}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    document.addEventListener('click', async function(e) {
        const button = e.target.closest('.add-to-cart');
        if (!button || button.disabled) return;
        
        e.preventDefault();
        
        const productId = button.dataset.id;
        const productName = button.dataset.name;
        const productPrice = button.dataset.price;
        
        button.disabled = true;
        const originalText = button.textContent;
        button.textContent = 'Добавляем...';
        
        try {
            const response = await fetch('/cart/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    productId,
                    name: productName,
                    price: productPrice,
                    quantity: 1
                })
            });
            
            const result = await response.json();
            
            if (!response.ok || !result.success) {
                throw new Error(result.error || 'Ошибка сервера');
            }
            
            updateCartCounter(result.count);
            showToast('Товар добавлен в корзину');
            
            button.classList.add('btn--in-cart');
            button.textContent = '✓ В корзине';
            
        } catch (error) {
            showToast(error.message || 'Не удалось добавить товар', 'error');
            button.textContent = originalText;
        } finally {
            setTimeout(() => {
                button.disabled = false;
            }, 2000);
        }
    });
    
    function updateCartCounter(count) {
        const counters = document.querySelectorAll('.cart-counter');
        counters.forEach(counter => {
            counter.textContent = count;
        });
    }
    
    function showToast(message, type = 'success') {
        document.querySelectorAll('.toast').forEach(el => el.remove());
        
        const toast = document.createElement('div');
        toast.className = `toast toast--${type}`;
        toast.textContent = message;
        document.body.appendChild(toast);
        
        setTimeout(() => {
            toast.classList.add('toast--fade-out');
            setTimeout(() => toast.remove(), 300);
        }, 3000);
    }
    
    function initCartCounter() {
        fetch('/cart/count')
            .then(response => response.json())
            .then(data => updateCartCounter(data.count || 0))
            .catch(() => updateCartCounter(0));
    }
    
    initCartCounter();
  });
</script>